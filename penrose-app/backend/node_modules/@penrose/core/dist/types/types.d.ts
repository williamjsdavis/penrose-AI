import { ShapeType } from "../shapes/Shapes.js";
export interface TypeDesc {
    description: string;
    symbol: string;
}
export declare const valueTypeDesc: {
    Real: {
        description: string;
        symbol: string;
    };
    Unit: {
        description: string;
        symbol: string;
    };
    PosInt: {
        description: string;
        symbol: string;
    };
    Nat: {
        description: string;
        symbol: string;
    };
    Real2: {
        description: string;
        symbol: string;
    };
    Real3: {
        description: string;
        symbol: string;
    };
    RealN: {
        description: string;
        symbol: string;
    };
    Real2N: {
        description: string;
        symbol: string;
    };
    RealNM: {
        description: string;
        symbol: string;
    };
    Color: {
        description: string;
        symbol: string;
    };
    String: {
        description: string;
        symbol: string;
    };
    ColorType: {
        description: string;
        symbol: string;
    };
    PathType: {
        description: string;
        symbol: string;
    };
    ShapeList: {
        description: string;
        symbol: string;
    };
    PathCmd: {
        description: string;
        symbol: string;
    };
    Boolean: {
        description: string;
        symbol: string;
    };
    ClipData: {
        description: string;
        symbol: string;
    };
};
export type ValueType = keyof typeof valueTypeDesc;
export interface ValueT {
    tag: "ValueT";
    type: ValueType;
}
export interface ShapeT {
    tag: "ShapeT";
    type: ShapeType | "AnyShape";
}
export interface UnionT {
    tag: "UnionT";
    types: ValueShapeT[];
}
export type ValueShapeT = ValueT | ShapeT | UnionT;
//# sourceMappingURL=types.d.ts.map