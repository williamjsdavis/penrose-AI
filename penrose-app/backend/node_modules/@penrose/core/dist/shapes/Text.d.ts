import * as ad from "../types/ad.js";
import { Center, Fill, Named, Rect, Rotate, ShapeCommon, String, Stroke } from "../types/shapes.js";
import { FloatV, StrV } from "../types/value.js";
import { Canvas, Context } from "./Samplers.js";
export interface TextProps<T> extends Named<T>, Stroke<T>, Fill<T>, Center<T>, // the center of the bounding box of the text
Rect<T>, Rotate<T>, String<T> {
    visibility: StrV;
    fontFamily: StrV;
    fontSizeAdjust: StrV;
    fontStretch: StrV;
    fontStyle: StrV;
    fontVariant: StrV;
    fontWeight: StrV;
    textAnchor: StrV;
    lineHeight: StrV;
    alignmentBaseline: StrV;
    dominantBaseline: StrV;
    ascent: FloatV<T>;
    descent: FloatV<T>;
}
export declare const sampleText: (context: Context, canvas: Canvas) => TextProps<ad.Num>;
export type Text<T> = ShapeCommon<T> & {
    shapeType: "Text";
} & TextProps<T>;
export declare const makeText: (context: Context, canvas: Canvas, properties: Partial<TextProps<ad.Num>>) => Text<ad.Num>;
//# sourceMappingURL=Text.d.ts.map