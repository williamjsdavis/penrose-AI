import { FloatV } from "src/types/value.js";
import * as ad from "../types/ad.js";
import { Center, Fill, Named, Rect, Rotate, ShapeCommon, String } from "../types/shapes.js";
import { Canvas, Context } from "./Samplers.js";
export interface EquationProps<T> extends Named<T>, Fill<T>, Center<T>, Rect<T>, Rotate<T>, String<T> {
    ascent: FloatV<T>;
    descent: FloatV<T>;
}
export declare const sampleEquation: (context: Context, canvas: Canvas) => EquationProps<ad.Num>;
export type Equation<T> = ShapeCommon<T> & {
    shapeType: "Equation";
} & EquationProps<T>;
export declare const makeEquation: (context: Context, canvas: Canvas, properties: Partial<EquationProps<ad.Num>>) => Equation<ad.Num>;
//# sourceMappingURL=Equation.d.ts.map