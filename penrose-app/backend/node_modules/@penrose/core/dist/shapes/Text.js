import { black, boolV, floatV, noPaint, strV, vectorV } from "../utils/Util.js";
import { uniform } from "./Samplers.js";
export const sampleText = (context, canvas) => ({
    name: strV("defaultText"),
    strokeWidth: floatV(0),
    strokeStyle: strV("solid"),
    strokeColor: noPaint(),
    strokeDasharray: strV(""),
    fillColor: black(),
    center: vectorV([
        context.makeInput({
            init: { tag: "Sampled", sampler: uniform(...canvas.xRange) },
            stages: "All",
        }),
        context.makeInput({
            init: { tag: "Sampled", sampler: uniform(...canvas.yRange) },
            stages: "All",
        }),
    ]),
    width: floatV(context.makeInput({
        init: { tag: "Pending", pending: 0 },
        stages: new Set(),
    })),
    height: floatV(context.makeInput({
        init: { tag: "Pending", pending: 0 },
        stages: new Set(),
    })),
    ascent: floatV(context.makeInput({
        init: { tag: "Pending", pending: 0 },
        stages: new Set(),
    })),
    descent: floatV(context.makeInput({
        init: { tag: "Pending", pending: 0 },
        stages: new Set(),
    })),
    rotation: floatV(0),
    string: strV("defaultText"),
    visibility: strV(""),
    fontFamily: strV("sans-serif"),
    fontSize: strV("12px"),
    fontSizeAdjust: strV(""),
    fontStretch: strV(""),
    fontStyle: strV(""),
    fontVariant: strV(""),
    fontWeight: strV(""),
    lineHeight: strV(""),
    textAnchor: strV("middle"),
    // NOTE: both `alignmentBaseline` and `dominantBaseline` are necessary for browser support. For instance, Firefox only respects the latter.
    alignmentBaseline: strV("alphabetic"),
    dominantBaseline: strV("alphabetic"),
    ensureOnCanvas: boolV(true),
});
export const makeText = (context, canvas, properties) => ({
    ...sampleText(context, canvas),
    ...properties,
    shapeType: "Text",
    passthrough: new Map(),
});
//# sourceMappingURL=Text.js.map