import * as ad from "../types/ad.js";
import { Center, Fill, Named, ShapeCommon, Stroke } from "../types/shapes.js";
import { FloatV } from "../types/value.js";
import { Canvas, Context } from "./Samplers.js";
export interface EllipseProps<T> extends Named<T>, Stroke<T>, Fill<T>, Center<T> {
    rx: FloatV<T>;
    ry: FloatV<T>;
}
export declare const sampleEllipse: (context: Context, canvas: Canvas) => EllipseProps<ad.Num>;
export type Ellipse<T> = ShapeCommon<T> & {
    shapeType: "Ellipse";
} & EllipseProps<T>;
export declare const makeEllipse: (context: Context, canvas: Canvas, properties: Partial<EllipseProps<ad.Num>>) => Ellipse<ad.Num>;
//# sourceMappingURL=Ellipse.d.ts.map