import { Shape } from "../shapes/Shapes.js";
import * as ad from "../types/ad.js";
import Graph from "./Graph.js";
export type GroupGraph = Graph<string, number>;
export declare const makeGroupGraph: (shapes: Shape<ad.Num>[]) => GroupGraph;
export declare const getParent: (graph: GroupGraph, node: string) => string | undefined;
export declare const traverseUp: (graph: GroupGraph, node: string) => string[];
export declare const findOrderedRoots: (graph: GroupGraph) => string[];
export type RenderGraph = RenderGraphNode[];
export type RenderGraphNode = Shape<ad.Num>;
export declare const buildRenderGraphNode: (name: string, groupGraph: GroupGraph, nameShapeMap: Map<string, Shape<ad.Num>>) => RenderGraphNode;
export declare const buildRenderGraph: (roots: string[], groupGraph: GroupGraph, nameShapeMap: Map<string, Shape<ad.Num>>) => RenderGraph;
//# sourceMappingURL=GroupGraph.d.ts.map